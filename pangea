#!/bin/sh/

data=${1:6}
unamestr=`uname`
version="2.0"
pwd=`pwd`
dataFolder="$pwd/$version/data"
toolsFolder="$pwd/$version/tools"


corpora=$(echo $data | tr "," "\n")


#####################################################################################################################
## pangea get #######################################################################################################

#########################
## get gata
makeRootFolderStructure() {
	#TODO: check if the folders exist before creating them
	mkdir "$pwd/$version"
	mkdir "$pwd/$version/examples"
	mkdir "$pwd/$version/data"
	mkdir "$pwd/$version/tools"
}

makeCorpusFolderStructure() {
	#TODO: check if the folders exist before creating them
	mkdir "$dataFolder/$1"        # create the corpus folder
	mkdir "$dataFolder/$1/sources"    
	mkdir "$dataFolder/$1/models"	
}

#$1 corpus name
#$1 extractor name
makeModelFolderStructure() {
	mkdir "$dataFolder/$1/models/$2"
	mkdir "$dataFolder/$1/models/$2/extractor"
	mkdir "$dataFolder/$1/models/$2/mse"
	mkdir "$dataFolder/$1/models/$2/images"
}

downloadCorpusSources(){
	corpusURI='http://scg.unibe.ch/pangea/'$version'/data/'$1'/sources/'
	download=1
	i=1
	while [  $download -eq 1 ]; do
		targetURI=$corpusURI'pt'$i'.tar'
		exists=`curl -s --head $targetURI | head -n 1 | grep "HTTP/1.[01] [23].."`
		if [ -z "$exists" ]; then
			download=0
		else	
			echo "== download $targetURI"
			curl -o "$dataFolder/$1/sources/pt$i.tar"  $targetURI
			i=$[i+1]
		fi
	done
}

downloadExtractor() {
	extractorURI="http://scg.unibe.ch/pangea/$version/data/$1/models/$2/extractor/$2.zip"
	curl -o "$dataFolder/$1/models/$2/extractor/$2.zip" $extractorURI	
}

downloadCorpusModels() {
	corporaURI="http://scg.unibe.ch/pangea/$version/data/$1/models/contents.txt"
	curl -o "$dataFolder/$1/models/contents.txt" $corporaURI
	
	while read model; do
  		echo "== download extractor $model"
		
		makeModelFolderStructure $1 $model
		downloadExtractor $1 $model

	done < "$dataFolder/$1/models/contents.txt"
}

unpackCorpusSource() {
	echo "== uncompress $1"
	for f in $(find "$dataFolder/$1/sources/" -name 'pt*.tar'); do
		tar xvf $f -C "$dataFolder/$1/sources/"
	done
}

downloadCorpus() {
	makeCorpusFolderStructure $1
	downloadCorpusSources $1
	downloadCorpusModels $1
	unpackCorpusSource $1
}

downloadAllCorpora(){
	corporaURI='http://scg.unibe.ch/pangea/'$version'/data/content.txt'
	curl -o "$dataFolder/content.txt" $corporaURI
	
	while read corpus; do
  		echo "== download $corpus"
		downloadCorpus $corpus

	done < "$dataFolder/content.txt"
}

downloadAndUnpackTools() {
	toolsURI='http://scg.unibe.ch/pangea/'$version'/tools'
	curl -o "$toolsFolder/image.tar" "$toolsURI/image.tar"
	curl -o "$toolsFolder/vm.tar" "$toolsURI/vm.tar"

	tar xvf "$toolsFolder/image.tar" -C "$toolsFolder/$1"
	tar xvf "$toolsFolder/vm.tar" -C "$toolsFolder/$1"

	rm "$toolsFolder/image.tar"
	rm "$toolsFolder/vm.tar"
}

unpackCorpus(){
	
	echo "== uncompress"
	for f in $(find . -name 'pt*.tar'); do
		tar xvf $f
	done
	tar xvf 'MSE.tar'
	tar xvf 'metadata.tar'
	
	# -------- unpack qualitas corpus 
	prefix=${1:6:2}
	if [ "$prefix" == 'QC' ]; then
		echo "== install Qualitas Corpus"
		version=${1:9}
		chmod +x 'QualitasCorpus-'$version'/bin/install.pl' 
		'./QualitasCorpus-'$version'/bin/install.pl'
		mv 'QualitasCorpus-'$version 'QC-'$version
	fi	

	# -------- remove downloaded archives
	rm *.tar	
}

#####################################################################################################################
## pangea make ######################################################################################################


case "$1" in

get)
    case "$2" in
        src) 
		if [ $# == 4 ]; 
		then
			if [ "$3" == "-c" ];
			then
				makeRootFolderStructure
				downloadCorpus $4
				downloadAndUnpackTools
			else
				echo "wrong arguments"
				exit;
            	fi
		else
			makeRootFolderStructure
			downloadAllCorpora
			downloadAndUnpackTools
		fi
    	;;
    	bin)
    	;;
    esac
;;
make)
	case "$2" in
		mse)
		echo "Start MSE creation"
		;;
		imgs)
		echo "Start image creation"
		;;
	esac
;;
clean)
;;
edit)
;;
run)
;;
*) echo "Signal number $1 is not processed"
;;
esac

# -------- download

#for x in $corpora
#do
#	downloadCorpus $x
#	unpackCorpus $x
#done
