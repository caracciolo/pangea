#!/bin/bash

unamestr=`uname`
version="2.0"
pwd=`pwd`
dataFolder="$pwd/$version/data"
toolsFolder="$pwd/$version/tools"
PangeaRepo="http://www.smalltalkhub.com/mc/SCG/Pangea/main"
defaultExtractor="verveinej11"


TMP_OS=`uname | tr "[:upper:]" "[:lower:]"`
if [[ "{$TMP_OS}" = *darwin* ]]; then
    OS="mac";
elif [[ "{$TMP_OS}" = *linux* ]]; then
    OS="linux";
elif [[ "{$TMP_OS}" = *win* ]]; then
    OS="win";
elif [[ "{$TMP_OS}" = *mingw* ]]; then
    OS="win";
else
    echo "Unsupported OS";
    exit 1;
fi


if [[ "$OS" == 'linux' ]]; 
then
   VM="$toolsFolder/vm/pharo-linux/pharo  -vm-display-null "
elif [[ "$OS" == 'mac' ]]; 
then
   VM="$toolsFolder/vm/pharo-mac/Pharo.app/Contents/MacOS/Pharo --headless --memory 1536m"
fi





#####################################################################################################################
## pangea get #######################################################################################################

#########################
## get gata
makeRootFolderStructure() {
	#TODO: check if the folders exist before creating them
	mkdir "$pwd/$version"
	mkdir "$pwd/$version/examples"
	mkdir "$pwd/$version/data"
	mkdir "$pwd/$version/tools"
}

makeCorpusFolderStructure() {
	#TODO: check if the folders exist before creating them
	mkdir "$dataFolder/$1"        # create the corpus folder
	mkdir "$dataFolder/$1/sources"    
	mkdir "$dataFolder/$1/models"	
}

#$1 corpus name
#$1 extractor name
makeModelFolderStructure() {
	mkdir "$dataFolder/$1/models/$2"
	mkdir "$dataFolder/$1/models/$2/extractor"
	mkdir "$dataFolder/$1/models/$2/mse"
	mkdir "$dataFolder/$1/models/$2/images"
}

downloadCorpusSources(){
	corpusURI='http://scg.unibe.ch/pangea/'$version'/data/'$1'/sources/'
	download=1
	i=1
	while [  $download -eq 1 ]; do
		targetURI=$corpusURI'pt'$i'.tar'
		exists=`curl -s --head $targetURI | head -n 1 | grep "HTTP/1.[01] [23].."`
		if [ -z "$exists" ]; then
			download=0
		else	
			echo "== download $targetURI"
			curl -o "$dataFolder/$1/sources/pt$i.tar"  $targetURI
			i=$[i+1]
		fi
	done
}

downloadExtractor() { ## downloadExtractor "QC-20120401r" "verveinej11"
	QCname=$1
	ExtrName=$2
	
	extractorURI="http://scg.unibe.ch/pangea/$version/data/$QCname/models/$ExtrName/extractor"
	curl -o "$dataFolder/$QCname/models/$ExtrName/extractor/extractor.zip" "$extractorURI/extractor.zip"
	curl -o "$dataFolder/$QCname/models/$ExtrName/extractor/extract.sh" "$extractorURI/extract.sh"
	 
	unzip "$dataFolder/$QCname/models/$ExtrName/extractor/extractor.zip" -d "$dataFolder/$QCname/models/$ExtrName/extractor"
	rm "$dataFolder/$QCname/models/$ExtrName/extractor/extractor.zip"
}

downloadCorpusModels() { ## downloadCorpusModels "QC-20120401r"
	QCname=$1

	corporaURI="http://scg.unibe.ch/pangea/$version/data/$QCname/models/contents.txt"
	curl -o "$dataFolder/$QCname/models/contents.txt" $corporaURI
	
	while read model; do
  		echo "== download extractor $model"
		
		makeModelFolderStructure $QCname $model
		downloadExtractor $QCname $model

	done < "$dataFolder/$QCname/models/contents.txt"
}

unpackCorpusSource() {
	QCname=$1
	
	echo "== uncompress $QCname"
	for f in $(find "$dataFolder/$QCname/sources/" -name 'pt*.tar'); do
		tar xvf $f -C "$dataFolder/$QCname/sources/"
	done
}

unpackQualitasCorpus(){ ## unpackQualitasCorpus "QC-20120401r"
	QCname=$1
	installFile="$dataFolder/$QCname/sources/$QCname/bin/install.pl"
	echo "== uncompress"
	echo "$installFile"
	# -------- unpack qualitas corpus 
	if [ -e $installFile ]; then
		echo "== install Qualitas Corpus"
		chmod +x "$installFile"
		echo "$installFile"
		echo "y" | $installFile
	fi	
}


downloadCorpus() {
	QCname=$1
	
	makeCorpusFolderStructure $QCname
	downloadCorpusSources $QCname
	downloadCorpusModels $QCname
	unpackCorpusSource $QCname
	unpackQualitasCorpus $QCname
}

downloadAllCorpora(){
	corporaURI='http://scg.unibe.ch/pangea/'$version'/data/content.txt'
	curl -o "$dataFolder/content.txt" $corporaURI
	
	while read corpus; do
  		echo "== download $corpus"
		downloadCorpus $corpus

	done < "$dataFolder/content.txt"
}

downloadAndUnpackTools() {
	toolsURI='http://scg.unibe.ch/pangea/'$version'/tools'
	curl -o "$toolsFolder/image.tar" "$toolsURI/image.tar"
	curl -o "$toolsFolder/vm.tar" "$toolsURI/vm.tar"

	tar xvf "$toolsFolder/image.tar" -C "$toolsFolder/$1"
	tar xvf "$toolsFolder/vm.tar" -C "$toolsFolder/$1"

	rm "$toolsFolder/image.tar"
	rm "$toolsFolder/vm.tar"
}


unpackCorpus(){
	
	echo "== uncompress"
	for f in $(find . -name 'pt*.tar'); do
		tar xvf $f
	done
	tar xvf 'MSE.tar'
	tar xvf 'metadata.tar'
	
	# -------- unpack qualitas corpus 
	prefix=${1:6:2}
	if [ "$prefix" == 'QC' ]; then
		echo "== install Qualitas Corpus"
		version=${1:9}
		chmod +x 'QualitasCorpus-'$version'/bin/install.pl' 
		'./QualitasCorpus-'$version'/bin/install.pl'
		mv 'QualitasCorpus-'$version 'QC-'$version
	fi	

	# -------- remove downloaded archives
	rm *.tar	
}

downloadAndUnpackImagesForCorpus() {
	QCname=$1
	ExtrName=$2

	imagesFolder="$dataFolder/$QCname/models/$ExtrName/images"
	imagesURI="http://scg.unibe.ch/pangea/$version/data/$QCname/models/$ExtrName/images/images.tar"
	# echo $imagesURI
	# echo $imagesFolder/images.tar
	curl -o "$imagesFolder/images.tar" "$imagesURI"
	tar xvf "$imagesFolder/images.tar" -C "$imagesFolder"


	# rm "$toolsFolder/image.tar"
	# rm "$toolsFolder/vm.tar"

}


#####################################################################################################################
## pangea make image #######################################################################################################

makeImages(){  ## makeImages "QC-20120401r" "verveinej11"

	QCname=$1
	ExtrName=$2
	
	serachFolder="$dataFolder/$QCname/sources"
	srcFolders=`find $serachFolder -type d -path "*/src" | grep -v /src/ | grep -v $QCname/docs/`
	
	cp "$toolsFolder/image/Moose.image" "$toolsFolder/image/MooseCurrent.image"
	cp "$toolsFolder/image/Moose.changes" "$toolsFolder/image/MooseCurrent.changes"
	

	moose="$toolsFolder/image/MooseCurrent.image"
	
	$VM $moose config $PangeaRepo ConfigurationOfPangea --install=development
	
	
	for f in $srcFolders; do
		
		sourcePath=$f
		mseFileName=`echo $sourcePath | awk -F"/" '{print $(NF-1)}' `
		mseFileWithoutExtension=$mseFileName
		mseFileName=$mseFileName".mse"
		
		mseFile=`find $dataFolder/$QCname  | grep $mseFileName | grep $ExtrName`
		imgDest=`echo $mseFile | sed s/MSE.*//`
		imgDest=${imgDest/$mseFileName/}
		imgDest=${imgDest/mse\//}
		imgDest=$imgDest"images/"
		
		absoluteScrFolder=$dataFolder/$QCname/sources/$QCname/Systems
		$VM $moose PangeaLoadMSE --source=$absoluteScrFolder --mse=$mseFile --name=$mseFileWithoutExtension	
		mv "$toolsFolder/image/$mseFileWithoutExtension.image" $imgDest
		mv "$toolsFolder/image/$mseFileWithoutExtension.changes" $imgDest
		
	done	
	
	#rm "$toolsFolder/image/mooseCurrent.image" "$toolsFolder/image/mooseCurrent.changes"
}

#####################################################################################################################
## pangea make mse #######################################################################################################

makeMSE(){  ## makeMSE  "QC-20120401r" "verveinej11" 
	QCname=$1 
	ExtrName=$2
	
	serachFolder="$dataFolder/$QCname/sources"
	srcFolders=`find $serachFolder -type d -path "*/src" | grep -v /src/ | grep -v /$QCname/docs/`
	
	
	for srcFolder in $srcFolders; do		
		mseFileName=`echo $srcFolder | awk -F"/" '{print $(NF-1)}' `
		mseFilePath="$dataFolder/$QCname/models/$ExtrName/mse/$mseFileName.mse"
		
		srcRelativeFolder=`echo $srcFolder | awk -F"/" '{print $(NF-2)"/"$(NF-1)}'`
		runFolder="$dataFolder/$QCname/sources/$QCname/Systems"
				
		chmod +x "$dataFolder/$QCname/models/$ExtrName/extractor/extract.sh"
		(cd $dataFolder/$QCname/models/$ExtrName/extractor && $dataFolder/$QCname/models/$ExtrName/extractor/extract.sh "$srcRelativeFolder/src" $mseFilePath $runFolder)
			
	done	
}

#####################################################################################################################
## pangea run ######################################################################################################

runScript() {
	QCname=$1 
	ExtrName=$2
	Script=$3

	#echo $VM
	imagesFolder="$dataFolder/$QCname/models/$ExtrName/images"
	
	for imageFile in `find $imagesFolder |  grep "image$" `; do
			# echo $imageFile
			# echo $VM $imageFile st $pwd/$Script 2>/dev/null
			$VM $imageFile st $pwd/$Script 2>/dev/null
	done
}

#####################################################################################################################
## pangea make ######################################################################################################

if [ $# -eq 0 ]
  then
    echo "usage: pangea get <src|bin> [-c QCr] "
    echo "       pangea make <all|mse|imgs> [-c QCr] [-e /path/to/extractor | name] [-m /path/to/mooseImage] "
    echo "       pangea clean <all|mse|imgs> [-c QCr]"
    echo "       pangea run script [-c QCr] <script-name.st>"
    echo "       pangea corpora"
    echo "       pangea images [-c QCr]"
    exit
fi



case "$1" in

corpora)
	ls 2.0/data/
	;;
get)
    case "$2" in
        src) 
		if [ $# == 4 ]; 
		then
			if [ "$3" == "-c" ];
			then
					makeRootFolderStructure
					downloadCorpus $4
					downloadAndUnpackTools
			else
				echo "wrong arguments"
				exit;
            	fi
		else
			makeRootFolderStructure
			downloadAllCorpora
			downloadAndUnpackTools
		fi
    	;;
    	bin)
		if [ $# == 4 ]; 
		then
			if [ "$3" == "-c" ];
			then
					# makeRootFolderStructure
					# downloadCorpus $4
					downloadAndUnpackImagesForCorpus $4 $defaultExtractor
			else
				echo "wrong arguments"
				exit;
            	fi
		else
			# makeRootFolderStructure
			# downloadAllCorpora
			downloadAndUnpackImagesForAllCorpora
		fi

    	;;
    esac
;;
make)
	case "$2" in
		mse)
		echo "Start MSE creation"
		if [ $# == 4 ]; 
		then
			if [ "$3" == "-c" ];
			then
				makeMSE $4 "verveinej11"
			else
				echo "wrong arguments"
				exit;
            	fi
		else
			echo "a";
		fi
		;;
		imgs)
		echo "Start image creation"
		if [ $# == 4 ]; 
		then
			if [ "$3" == "-c" ];
			then
				makeImages $4 "verveinej11"
			else
				echo "wrong arguments"
				exit;
            	fi
		else
			echo "a";
		fi
		;;
	esac
;;
clean)
;;
images)
	case "$2" in
		"-c")
		if [ $# == 3 ];
			then
			echo "$dataFolder/$3/models/verveinej11/images"
		else
			echo "expecting corpus name"
		fi
		
	esac
;;
edit)
;;
run)
	case "$2" in
		script)
		# echo "Run script"
		if [ $# == 5 ]; 
		then
			if [ "$3" == "-c" ];
			then
				# echo "running script..."
				runScript $4 "verveinej11" $5
			else
				echo "wrong arguments"
				exit;
            	fi
		else
			echo "a";
		fi
		;;
	esac
;;
*) echo "Signal number $1 is not processed"
;;
esac

# -------- download

#for x in $corpora
#do
#	downloadCorpus $x
#	unpackCorpus $x
#done
